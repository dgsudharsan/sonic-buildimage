From 544ce39625a848275f6e9f9e9d94d67bfbbb7f9b Mon Sep 17 00:00:00 2001
From: dgsudharsan <sudharsand@nvidia.com>
Date: Mon, 12 Jun 2023 21:41:18 +0000
Subject: [PATCH] zebra: Fix crash when dplane_fpm_nl fails to process received
 routes


diff --git a/zebra/dplane_fpm_nl.c b/zebra/dplane_fpm_nl.c
index b18a96353..804eb43a4 100644
--- a/zebra/dplane_fpm_nl.c
+++ b/zebra/dplane_fpm_nl.c
@@ -599,7 +599,8 @@ static void fpm_read(struct thread *t)
 		switch (hdr->nlmsg_type) {
 		case RTM_NEWROUTE:
 			ctx = dplane_ctx_alloc();
-			dplane_ctx_set_op(ctx, DPLANE_OP_ROUTE_NOTIFY);
+                        dplane_ctx_route_init(ctx, DPLANE_OP_ROUTE_NOTIFY, NULL,
+					      NULL);
 			if (netlink_route_change_read_unicast_internal(
 				    hdr, 0, false, ctx) != 1) {
 				dplane_ctx_fini(&ctx);
diff --git a/zebra/zebra_dplane.c b/zebra/zebra_dplane.c
index c8511bd28..4927af562 100644
--- a/zebra/zebra_dplane.c
+++ b/zebra/zebra_dplane.c
@@ -2853,9 +2853,18 @@ int dplane_ctx_route_init(struct zebra_dplane_ctx *ctx, enum dplane_op_e op,
 	const struct interface *ifp;
 	struct dplane_intf_extra *if_extra;
 
-	if (!ctx || !rn || !re)
+	if (!ctx)
 		return ret;
 
+	/* This function may be called to create/init a dplane context, not
+	 * necessarily to copy a route object.
+	 */
+	if (!rn || !re) {
+		dplane_intf_extra_list_init(&ctx->u.rinfo.intf_extra_list);
+		ctx->zd_op = op;
+		return AOK;
+	}
+
 	/*
 	 * Let's grab the data from the route_node
 	 * so that we can call a helper function
-- 
2.17.1

